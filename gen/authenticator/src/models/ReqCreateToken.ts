/* tslint:disable */
/* eslint-disable */
/**
 * Authenticator
 * REST API and web server providing authentication for a Tapis v3 instance.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReqCreateToken
 */
export interface ReqCreateToken {
    /**
     * The username being authenticated (for password grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    username?: string;
    /**
     * The password assoicated with the username being authenticated (for password grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    password?: string;
    /**
     * The client_id being authenticated (for device_code grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    client_id?: string;
    /**
     * The client_key being authenticated (optional for authorization_code grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    client_key?: string;
    /**
     * The OAuth2 grant type being used; either password, authorization_code or refresh_token.
     * @type {string}
     * @memberof ReqCreateToken
     */
    grant_type?: string;
    /**
     * The client's redirect URI (for authorization_code grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    redirect_uri?: string;
    /**
     * The authorization code associated with the request (for authorization_code grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    code?: string;
    /**
     * The device code associated with the request (for device_code grant)
     * @type {string}
     * @memberof ReqCreateToken
     */
    device_code?: string;
    /**
     * The refresh token associated with the request (for refresh_token grant).
     * @type {string}
     * @memberof ReqCreateToken
     */
    refresh_token?: string;
}

export function ReqCreateTokenFromJSON(json: any): ReqCreateToken {
    return ReqCreateTokenFromJSONTyped(json, false);
}

export function ReqCreateTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqCreateToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'client_id': !exists(json, 'client_id') ? undefined : json['client_id'],
        'client_key': !exists(json, 'client_key') ? undefined : json['client_key'],
        'grant_type': !exists(json, 'grant_type') ? undefined : json['grant_type'],
        'redirect_uri': !exists(json, 'redirect_uri') ? undefined : json['redirect_uri'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'device_code': !exists(json, 'device_code') ? undefined : json['device_code'],
        'refresh_token': !exists(json, 'refresh_token') ? undefined : json['refresh_token'],
    };
}

export function ReqCreateTokenToJSON(value?: ReqCreateToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'password': value.password,
        'client_id': value.client_id,
        'client_key': value.client_key,
        'grant_type': value.grant_type,
        'redirect_uri': value.redirect_uri,
        'code': value.code,
        'device_code': value.device_code,
        'refresh_token': value.refresh_token,
    };
}

