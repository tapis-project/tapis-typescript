/* tslint:disable */
/* eslint-disable */
/**
 * Authenticator
 * REST API and web server providing authentication for a Tapis v3 instance.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    RespGetProfile,
    RespGetProfileFromJSON,
    RespGetProfileToJSON,
    RespGetUserinfo,
    RespGetUserinfoFromJSON,
    RespGetUserinfoToJSON,
    RespListProfiles,
    RespListProfilesFromJSON,
    RespListProfilesToJSON,
} from '../models';

export interface GetProfileRequest {
    username: string;
}

export interface ListProfilesRequest {
    limit?: number;
    offset?: number;
}

/**
 * 
 */
export class ProfilesApi extends runtime.BaseAPI {

    /**
     */
    async getProfileRaw(requestParameters: GetProfileRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RespGetProfile>> {
        if (requestParameters.username === null || requestParameters.username === undefined) {
            throw new runtime.RequiredError('username','Required parameter requestParameters.username was null or undefined when calling getProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Tapis-Token"] = this.configuration.apiKey("X-Tapis-Token"); // TapisJWT authentication
        }

        const response = await this.request({
            path: `/v3/oauth2/profiles/{username}`.replace(`{${"username"}}`, encodeURIComponent(String(requestParameters.username))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RespGetProfileFromJSON(jsonValue));
    }

    /**
     */
    async getProfile(requestParameters: GetProfileRequest, initOverrides?: RequestInit): Promise<RespGetProfile> {
        const response = await this.getProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return the user profile associated with the Tapis Token. Also can be used to validate the token.
     */
    async getUserinfoRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<RespGetUserinfo>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Tapis-Token"] = this.configuration.apiKey("X-Tapis-Token"); // TapisJWT authentication
        }

        const response = await this.request({
            path: `/v3/oauth2/userinfo`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RespGetUserinfoFromJSON(jsonValue));
    }

    /**
     * Return the user profile associated with the Tapis Token. Also can be used to validate the token.
     */
    async getUserinfo(initOverrides?: RequestInit): Promise<RespGetUserinfo> {
        const response = await this.getUserinfoRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async listProfilesRaw(requestParameters: ListProfilesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RespListProfiles>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-Tapis-Token"] = this.configuration.apiKey("X-Tapis-Token"); // TapisJWT authentication
        }

        const response = await this.request({
            path: `/v3/oauth2/profiles`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RespListProfilesFromJSON(jsonValue));
    }

    /**
     */
    async listProfiles(requestParameters: ListProfilesRequest, initOverrides?: RequestInit): Promise<RespListProfiles> {
        const response = await this.listProfilesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
