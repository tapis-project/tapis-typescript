/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Applications API
 * The Tapis Applications API provides for management of Tapis applications including permissions.
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AppFileInput,
    AppFileInputFromJSON,
    AppFileInputFromJSONTyped,
    AppFileInputToJSON,
    AppFileInputArray,
    AppFileInputArrayFromJSON,
    AppFileInputArrayFromJSONTyped,
    AppFileInputArrayToJSON,
    ParameterSet,
    ParameterSetFromJSON,
    ParameterSetFromJSONTyped,
    ParameterSetToJSON,
    ReqSubscribe,
    ReqSubscribeFromJSON,
    ReqSubscribeFromJSONTyped,
    ReqSubscribeToJSON,
} from './';

/**
 * 
 * @export
 * @interface JobAttributes
 */
export interface JobAttributes {
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof JobAttributes
     */
    dynamicExecSystem?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof JobAttributes
     */
    execSystemConstraints?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    execSystemId?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    execSystemExecDir?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    execSystemInputDir?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    execSystemOutputDir?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    dtnSystemInputDir?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    dtnSystemOutputDir?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    execSystemLogicalQueue?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    archiveSystemId?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    archiveSystemDir?: string;
    /**
     * 
     * @type {boolean}
     * @memberof JobAttributes
     */
    archiveOnAppError?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof JobAttributes
     */
    isMpi?: boolean;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    mpiCmd?: string;
    /**
     * 
     * @type {string}
     * @memberof JobAttributes
     */
    cmdPrefix?: string;
    /**
     * 
     * @type {ParameterSet}
     * @memberof JobAttributes
     */
    parameterSet?: ParameterSet;
    /**
     * 
     * @type {Array<AppFileInput>}
     * @memberof JobAttributes
     */
    fileInputs?: Array<AppFileInput>;
    /**
     * 
     * @type {Array<AppFileInputArray>}
     * @memberof JobAttributes
     */
    fileInputArrays?: Array<AppFileInputArray>;
    /**
     * 
     * @type {number}
     * @memberof JobAttributes
     */
    nodeCount?: number;
    /**
     * 
     * @type {number}
     * @memberof JobAttributes
     */
    coresPerNode?: number;
    /**
     * 
     * @type {number}
     * @memberof JobAttributes
     */
    memoryMB?: number;
    /**
     * 
     * @type {number}
     * @memberof JobAttributes
     */
    maxMinutes?: number;
    /**
     * 
     * @type {Array<ReqSubscribe>}
     * @memberof JobAttributes
     */
    subscriptions?: Array<ReqSubscribe>;
    /**
     * 
     * @type {Array<string>}
     * @memberof JobAttributes
     */
    tags?: Array<string>;
}

export function JobAttributesFromJSON(json: any): JobAttributes {
    return JobAttributesFromJSONTyped(json, false);
}

export function JobAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'dynamicExecSystem': !exists(json, 'dynamicExecSystem') ? undefined : json['dynamicExecSystem'],
        'execSystemConstraints': !exists(json, 'execSystemConstraints') ? undefined : json['execSystemConstraints'],
        'execSystemId': !exists(json, 'execSystemId') ? undefined : json['execSystemId'],
        'execSystemExecDir': !exists(json, 'execSystemExecDir') ? undefined : json['execSystemExecDir'],
        'execSystemInputDir': !exists(json, 'execSystemInputDir') ? undefined : json['execSystemInputDir'],
        'execSystemOutputDir': !exists(json, 'execSystemOutputDir') ? undefined : json['execSystemOutputDir'],
        'dtnSystemInputDir': !exists(json, 'dtnSystemInputDir') ? undefined : json['dtnSystemInputDir'],
        'dtnSystemOutputDir': !exists(json, 'dtnSystemOutputDir') ? undefined : json['dtnSystemOutputDir'],
        'execSystemLogicalQueue': !exists(json, 'execSystemLogicalQueue') ? undefined : json['execSystemLogicalQueue'],
        'archiveSystemId': !exists(json, 'archiveSystemId') ? undefined : json['archiveSystemId'],
        'archiveSystemDir': !exists(json, 'archiveSystemDir') ? undefined : json['archiveSystemDir'],
        'archiveOnAppError': !exists(json, 'archiveOnAppError') ? undefined : json['archiveOnAppError'],
        'isMpi': !exists(json, 'isMpi') ? undefined : json['isMpi'],
        'mpiCmd': !exists(json, 'mpiCmd') ? undefined : json['mpiCmd'],
        'cmdPrefix': !exists(json, 'cmdPrefix') ? undefined : json['cmdPrefix'],
        'parameterSet': !exists(json, 'parameterSet') ? undefined : ParameterSetFromJSON(json['parameterSet']),
        'fileInputs': !exists(json, 'fileInputs') ? undefined : ((json['fileInputs'] as Array<any>).map(AppFileInputFromJSON)),
        'fileInputArrays': !exists(json, 'fileInputArrays') ? undefined : ((json['fileInputArrays'] as Array<any>).map(AppFileInputArrayFromJSON)),
        'nodeCount': !exists(json, 'nodeCount') ? undefined : json['nodeCount'],
        'coresPerNode': !exists(json, 'coresPerNode') ? undefined : json['coresPerNode'],
        'memoryMB': !exists(json, 'memoryMB') ? undefined : json['memoryMB'],
        'maxMinutes': !exists(json, 'maxMinutes') ? undefined : json['maxMinutes'],
        'subscriptions': !exists(json, 'subscriptions') ? undefined : ((json['subscriptions'] as Array<any>).map(ReqSubscribeFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function JobAttributesToJSON(value?: JobAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'dynamicExecSystem': value.dynamicExecSystem,
        'execSystemConstraints': value.execSystemConstraints,
        'execSystemId': value.execSystemId,
        'execSystemExecDir': value.execSystemExecDir,
        'execSystemInputDir': value.execSystemInputDir,
        'execSystemOutputDir': value.execSystemOutputDir,
        'dtnSystemInputDir': value.dtnSystemInputDir,
        'dtnSystemOutputDir': value.dtnSystemOutputDir,
        'execSystemLogicalQueue': value.execSystemLogicalQueue,
        'archiveSystemId': value.archiveSystemId,
        'archiveSystemDir': value.archiveSystemDir,
        'archiveOnAppError': value.archiveOnAppError,
        'isMpi': value.isMpi,
        'mpiCmd': value.mpiCmd,
        'cmdPrefix': value.cmdPrefix,
        'parameterSet': ParameterSetToJSON(value.parameterSet),
        'fileInputs': value.fileInputs === undefined ? undefined : ((value.fileInputs as Array<any>).map(AppFileInputToJSON)),
        'fileInputArrays': value.fileInputArrays === undefined ? undefined : ((value.fileInputArrays as Array<any>).map(AppFileInputArrayToJSON)),
        'nodeCount': value.nodeCount,
        'coresPerNode': value.coresPerNode,
        'memoryMB': value.memoryMB,
        'maxMinutes': value.maxMinutes,
        'subscriptions': value.subscriptions === undefined ? undefined : ((value.subscriptions as Array<any>).map(ReqSubscribeToJSON)),
        'tags': value.tags,
    };
}

