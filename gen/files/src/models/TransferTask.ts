/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Files API
 * The Tapis Files API provides for management of file resources on Tapis systems
 *
 * The version of the OpenAPI document: 1.3.6
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TransferStatusEnum,
    TransferStatusEnumFromJSON,
    TransferStatusEnumFromJSONTyped,
    TransferStatusEnumToJSON,
    TransferTaskParent,
    TransferTaskParentFromJSON,
    TransferTaskParentFromJSONTyped,
    TransferTaskParentToJSON,
} from './';

/**
 * 
 * @export
 * @interface TransferTask
 */
export interface TransferTask {
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    tenantId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    tag?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    uuid?: string;
    /**
     * 
     * @type {TransferStatusEnum}
     * @memberof TransferTask
     */
    status?: TransferStatusEnum;
    /**
     * 
     * @type {Array<TransferTaskParent>}
     * @memberof TransferTask
     */
    parentTasks?: Array<TransferTaskParent>;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    estimatedTotalBytes?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    totalBytesTransferred?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    totalTransfers?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    completeTransfers?: number;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    errorMessage?: string;
    /**
     * 
     * @type {Date}
     * @memberof TransferTask
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransferTask
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransferTask
     */
    endTime?: Date;
}

export function TransferTaskFromJSON(json: any): TransferTask {
    return TransferTaskFromJSONTyped(json, false);
}

export function TransferTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'status': !exists(json, 'status') ? undefined : TransferStatusEnumFromJSON(json['status']),
        'parentTasks': !exists(json, 'parentTasks') ? undefined : ((json['parentTasks'] as Array<any>).map(TransferTaskParentFromJSON)),
        'estimatedTotalBytes': !exists(json, 'estimatedTotalBytes') ? undefined : json['estimatedTotalBytes'],
        'totalBytesTransferred': !exists(json, 'totalBytesTransferred') ? undefined : json['totalBytesTransferred'],
        'totalTransfers': !exists(json, 'totalTransfers') ? undefined : json['totalTransfers'],
        'completeTransfers': !exists(json, 'completeTransfers') ? undefined : json['completeTransfers'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'startTime': !exists(json, 'startTime') ? undefined : (new Date(json['startTime'])),
        'endTime': !exists(json, 'endTime') ? undefined : (new Date(json['endTime'])),
    };
}

export function TransferTaskToJSON(value?: TransferTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'tenantId': value.tenantId,
        'tag': value.tag,
        'uuid': value.uuid,
        'status': TransferStatusEnumToJSON(value.status),
        'parentTasks': value.parentTasks === undefined ? undefined : ((value.parentTasks as Array<any>).map(TransferTaskParentToJSON)),
        'estimatedTotalBytes': value.estimatedTotalBytes,
        'totalBytesTransferred': value.totalBytesTransferred,
        'totalTransfers': value.totalTransfers,
        'completeTransfers': value.completeTransfers,
        'errorMessage': value.errorMessage,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'startTime': value.startTime === undefined ? undefined : (value.startTime.toISOString()),
        'endTime': value.endTime === undefined ? undefined : (value.endTime.toISOString()),
    };
}

