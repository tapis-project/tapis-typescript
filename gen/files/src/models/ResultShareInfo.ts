/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Files API
 * The Tapis Files API provides for management of file resources on Tapis systems
 *
 * The version of the OpenAPI document: 1.3.6
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserShareInfo,
    UserShareInfoFromJSON,
    UserShareInfoFromJSONTyped,
    UserShareInfoToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResultShareInfo
 */
export interface ResultShareInfo {
    /**
     * Indicates given path is shared publicly
     * @type {boolean}
     * @memberof ResultShareInfo
     */
    isPublic?: boolean;
    /**
     * Path that resulted in specified path being shared publicly
     * @type {string}
     * @memberof ResultShareInfo
     */
    isPublicPath?: string;
    /**
     * Set of users with whom the path is shared.
     * @type {Array<string>}
     * @memberof ResultShareInfo
     */
    userSet?: Array<string>;
    /**
     * List of additional share information for each user.
     * @type {Array<UserShareInfo>}
     * @memberof ResultShareInfo
     */
    userShareInfoSet?: Array<UserShareInfo>;
}

export function ResultShareInfoFromJSON(json: any): ResultShareInfo {
    return ResultShareInfoFromJSONTyped(json, false);
}

export function ResultShareInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResultShareInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isPublic': !exists(json, 'isPublic') ? undefined : json['isPublic'],
        'isPublicPath': !exists(json, 'isPublicPath') ? undefined : json['isPublicPath'],
        'userSet': !exists(json, 'userSet') ? undefined : json['userSet'],
        'userShareInfoSet': !exists(json, 'userShareInfoSet') ? undefined : ((json['userShareInfoSet'] as Array<any>).map(UserShareInfoFromJSON)),
    };
}

export function ResultShareInfoToJSON(value?: ResultShareInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isPublic': value.isPublic,
        'isPublicPath': value.isPublicPath,
        'userSet': value.userSet,
        'userShareInfoSet': value.userShareInfoSet === undefined ? undefined : ((value.userShareInfoSet as Array<any>).map(UserShareInfoToJSON)),
    };
}

