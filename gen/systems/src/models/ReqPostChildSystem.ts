/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Systems API
 * The Tapis Systems API provides for management of Tapis Systems including permissions, credentials and Scheduler Profiles.
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReqPostChildSystem
 */
export interface ReqPostChildSystem {
    /**
     * Short descriptive name for the system that is unique within the tenant.
     * @type {string}
     * @memberof ReqPostChildSystem
     */
    id?: string;
    /**
     * Username to use when accessing the system. A specific user (such as a service account) or the dynamic user ``${apiUserId}``.
     * @type {string}
     * @memberof ReqPostChildSystem
     */
    effectiveUserId: string;
    /**
     * Effective root directory to be used when listing files or moving files to and from the system.
     * @type {string}
     * @memberof ReqPostChildSystem
     */
    rootDir: string;
}

export function ReqPostChildSystemFromJSON(json: any): ReqPostChildSystem {
    return ReqPostChildSystemFromJSONTyped(json, false);
}

export function ReqPostChildSystemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqPostChildSystem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'effectiveUserId': json['effectiveUserId'],
        'rootDir': json['rootDir'],
    };
}

export function ReqPostChildSystemToJSON(value?: ReqPostChildSystem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'effectiveUserId': value.effectiveUserId,
        'rootDir': value.rootDir,
    };
}

