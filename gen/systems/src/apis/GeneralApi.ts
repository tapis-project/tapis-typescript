/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Systems API
 * The Tapis Systems API provides for management of Tapis Systems including permissions, credentials and Scheduler Profiles.
 *
 * The version of the OpenAPI document: 1.6.3
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    RespBasic,
    RespBasicFromJSON,
    RespBasicToJSON,
} from '../models';

/**
 * 
 */
export class GeneralApi extends runtime.BaseAPI {

    /**
     * Health check. Lightweight non-authenticated check that service is alive.
     */
    async healthCheckRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<RespBasic>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v3/systems/healthcheck`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RespBasicFromJSON(jsonValue));
    }

    /**
     * Health check. Lightweight non-authenticated check that service is alive.
     */
    async healthCheck(initOverrides?: RequestInit): Promise<RespBasic> {
        const response = await this.healthCheckRaw(initOverrides);
        return await response.value();
    }

    /**
     * Ready check. Non-authenticated check that service is ready to do work.
     */
    async readyCheckRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<RespBasic>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v3/systems/readycheck`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RespBasicFromJSON(jsonValue));
    }

    /**
     * Ready check. Non-authenticated check that service is ready to do work.
     */
    async readyCheck(initOverrides?: RequestInit): Promise<RespBasic> {
        const response = await this.readyCheckRaw(initOverrides);
        return await response.value();
    }

}
