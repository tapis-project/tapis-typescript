/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Machine Learning Hub - Models API
 * The Tapis Machine Learning Hub - Models API provides users access to machine learning models from HuggingFace within the Tapis framework.
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ModelServerPossible,
    ModelServerPossibleFromJSON,
    ModelServerPossibleFromJSONTyped,
    ModelServerPossibleToJSON,
    RespError,
    RespErrorFromJSON,
    RespErrorFromJSONTyped,
    RespErrorToJSON,
    RespModelServerErrorAllOf,
    RespModelServerErrorAllOfFromJSON,
    RespModelServerErrorAllOfFromJSONTyped,
    RespModelServerErrorAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface RespModelServerError
 */
export interface RespModelServerError {
    /**
     * 
     * @type {string}
     * @memberof RespModelServerError
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof RespModelServerError
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof RespModelServerError
     */
    version?: string;
    /**
     * 
     * @type {ModelServerPossible}
     * @memberof RespModelServerError
     */
    result?: ModelServerPossible;
    /**
     * 
     * @type {object}
     * @memberof RespModelServerError
     */
    metadata?: object;
}

export function RespModelServerErrorFromJSON(json: any): RespModelServerError {
    return RespModelServerErrorFromJSONTyped(json, false);
}

export function RespModelServerErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): RespModelServerError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'result': !exists(json, 'result') ? undefined : ModelServerPossibleFromJSON(json['result']),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function RespModelServerErrorToJSON(value?: RespModelServerError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'message': value.message,
        'version': value.version,
        'result': ModelServerPossibleToJSON(value.result),
        'metadata': value.metadata,
    };
}

